# =================
# alias && command
# =================

alias ls='ls --color=tty'
alias ll='ls -lh'
alias la='ls -lAh'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias grep='grep --color=auto'

# git
alias gitls="git status"
alias gitnew="git checkout -b"
alias gitck="git checkout"
alias gitpl="git pull origin"
alias gitph="git push origin"
alias git-set-user="git config user.name TinkGu && git config user.email tlwrite@126.com && git config -l"

# node & npm
alias npmls="npm ls --depth=0"
alias npmrm="find . -name 'node_modules' -type d -prune -print -exec rm -rf '{}' \;"

# nginx
alias cdnginx="cd /usr/local/etc/nginx"
alias ednginx="code /usr/local/etc/nginx/nginx.conf"
alias reset-nginx="nginx -c /usr/local/etc/nginx/nginx.conf.default && nginx -s reload"

# update this file
alias vbashrc='code ~/.zsh/.zsh_profile'
alias wbashrc='source ~/.zsh/.zsh_profile'
alias vbashcd='code ~/.zsh/.zsh_cd'

# utils
alias myip="ipconfig getifaddr en0"
# 查看所有被占用的端口
function ports() { lsof -Pni4 | grep LISTEN }

# ========
# auto sh and tools
# ========

# if [ -e "$HOME/.zsh/.zsh_cd" ]; then
#    source ~/.zsh/.zsh_cd
# fi

# tmux
# alias rtmux="tmux refresh-client -S" # refresh tmux
# function tpl() {
#   tmux new-window -c $1
#   tmux split-window -h -c $1
# }

# 设置 tab 补全时，忽略大小写
autoload -Uz compinit && compinit -u
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'

# make git autocomplete faster
__git_files () {
   _wanted files expl 'local files' _files
}

## close firewall
# service iptables stop

# ========
# environments
# ========

# ruby
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# terminl support 256 color
export TERM='xterm-256color'

# electron
export ELECTRON_MIRROR="https://npm.taobao.org/mirrors/electron/"

# python
## 使 pip 安装的包可以在命令行中使用
if [ -d $HOME/Library/Python/2.7/bin ]; then
    export PATH=$HOME/Library/Python/2.7/bin:$PATH
fi

# 通过代理高速下载 github release 文件
function wget2() {
  wget $1 -e use_proxy=yes -e http_proxy=127.0.0.1:1087
}

# homebrew
export HOMEBREW_NO_INSTALL_FROM_API=True
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"

# nvm
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
